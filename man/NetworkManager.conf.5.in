.\" NetworkManager.conf(5) manual page
.\"
.\" Copyright (C) 2010 - 2013 Red Hat, Inc.
.\"
.TH "NetworkManager.conf" "5" "17 January 2013" ""
.SH NAME
NetworkManager.conf \- NetworkManager configuration file
.SH SYNOPSIS
/etc/NetworkManager/NetworkManager.conf
.br
or
.br
\fI<SYSCONFDIR>\fP/NetworkManager/NetworkManager.conf
.br
where <SYSCONFDIR> depends on your distribution or build.
.SH DESCRIPTION
.P
.I NetworkManager.conf
is a configuration file for NetworkManager. It is used to set up various
aspects of NetworkManager's behavior. The location of
the file may be changed through use of the "\-\-config=" argument for
\fBNetworkManager\fP (8).
.SH "FILE FORMAT"
.P
The configuration file format is so-called key file (sort of ini-style format).
It consists of sections (groups) of key-value pairs. Lines beginning with a '#' and blank
lines are considered comments. Sections are started by a header line containing
the section enclosed in '[' and ']', and ended implicitly by the start of
the next section or the end of the file. Each key-value pair must be contained
in a section.
.br
Minimal system settings configuration file looks like this:
.P
.nf
[main]
plugins=keyfile
.fi
.P
Description of sections and available keys follows:
.SS [main]
This section is the only mandatory section of the configuration file.
.TP
.B plugins=\fIplugin1\fP,\fIplugin2\fP, ...
List system settings plugin names separated by ','. These plugins are used to
read/write system-wide connection. When more plugins are specified, the
connections are read from all listed plugins. When writing connections, the
plugins will be asked to save the connection in the order listed here. If the
first plugin cannot write out that connection type, or can't write out any
connections, the next plugin is tried. If none of the plugins can save the
connection, the error is returned to the user.
.P
.RS
.B "Available plugins:"
.br
.TP 
.I keyfile
plugin is the generic plugin that supports all the connection types and
capabilities that NetworkManager has. It writes files out in a .ini-style format in
/etc/NetworkManager/system-connections. For security, it will ignore files
that are readable or writeable by any user or group other than
.I root
since private keys and passphrases may be stored in plaintext inside the file.
.TP 
.I ifcfg\-rh
plugin is used on the Fedora and Red Hat Enterprise Linux distributions
to read and write configuration from the standard /etc/sysconfig/network-scripts/ifcfg-* files.
It currently supports reading wired, WiFi, and 802.1x connections, but does not yet support reading
or writing mobile broadband, PPPoE, or VPN connections. To allow reading and writing of these
add \fIkeyfile\fP plugin to your configuration as well.
.TP
.I ifupdown
plugin is used on the Debian and Ubuntu distributions, and reads connections from
/etc/network/interfaces. Since it cannot write connections out (that support isn't planned),
it is usually paired with the \fIkeyfile\fP plugin to enable saving and editing of new connections.
The \fIifupdown\fP plugin supports basic wired and WiFi connections, including WPA-PSK.
.TP
.I ifcfg\-suse
plugin is only provided for simple backward compatibility with SUSE and OpenSUSE configuration.
Most setups should be using the \fIkeyfile\fP plugin instead. The \fIifcfg\-suse\fP plugin supports
reading wired and WiFi connections, but does not support saving any connection types.
.RE
.TP
.B dhcp=\fIdhclient\fP | \fIdhcpcd\fP
This key sets up what DHCP client NetworkManager will use. Presently
\fIdhclient\fP and \fIdhcpcd\fP are supported. The client configured here should
be available on your system too. If this key is missing, available DHCP clients
are looked for in this order: dhclient, dhcpcd.
.TP
.B no-auto-default=\fI<hwaddr>\fP,\fI<hwaddr>\fP,... | \fI*\fP
Set devices for which NetworkManager shouldn't create default wired connection
(Auto eth0). NetworkManager creates a default wired connection for any wired
device that is managed and doesn't have a connection configured. List a device
in this option to inhibit creating the default connection for the device.
.br
When the default wired connection is deleted or saved to a new persistent connection
by a plugin, the MAC address of the wired device is automatically added to this list
to prevent creating the default connection for that device again.
Devices are specified by their MAC addresses, in lowercase. Multiple
entries are separated by commas. You can use the glob character \fI*\fP instead
of listing addresses to specify all devices.
.br
Examples:
.nf
no-auto-default=00:22:68:5c:5d:c4,00:1e:65:ff:aa:ee
no-auto-default=*
.fi
.TP
.B dns=\fIplugin1\fP,\fIplugin2\fP, ...
List DNS plugin names separated by ','. DNS plugins are used to provide local
caching nameserver functionality (which speeds up DNS queries) and to push
DNS data to applications that use it.
.P
.RS
.B "Available plugins:"
.br
.TP
.I dnsmasq
this plugin uses dnsmasq to provide local caching nameserver functionality.
.RE
.SS [keyfile]
This section contains keyfile-specific options and thus only has effect when using \fIkeyfile\fP plugin.
.TP
.B hostname=\fI<hostname>\fP
Set a persistent hostname when using the \fIkeyfile\fP plugin.
.TP
.B unmanaged-devices=\fImac:<hwaddr>\fP;\fImac:<hwaddr>\fP;...
Set devices that should be ignored by NetworkManager when using the \fIkeyfile\fP
plugin. Devices are specified in the following format: "mac:<hwaddr>", where
<hwaddr> is MAC address of the device to be ignored, in hex-digits-and-colons notation.
Multiple entries are separated by a semicolon. No spaces are allowed in the value.
.br
Example:
.nf
unmanaged-devices=mac:00:22:68:1c:59:b1;mac:00:1E:65:30:D1:C4
.fi
.SS [ifupdown]
This section contains ifupdown-specific options and thus only has effect when using \fIifupdown\fP plugin.
.TP
.B managed=\fIfalse\fP | \fItrue\fP
Controls whether interfaces listed in the 'interfaces' file are managed by NetworkManager.
If set to \fItrue\fP, then interfaces listed in /etc/network/interfaces are managed by NetworkManager.
If set to \fIfalse\fP, then any interface listed in /etc/network/interfaces will be
ignored by NetworkManager. Remember that NetworkManager controls the default route,
so because the interface is ignored, NetworkManager may assign the default route to
some other interface.
When the option is missing, \fIfalse\fP value is taken as default.
.SS [logging]
This section controls NetworkManager's logging.  Any settings here are
overridden by the \-\-log\-level and \-\-log\-domains command-line options.
.TP
.B level=\fI<level>\fP
One of [ERR, WARN, INFO, DEBUG].  The ERR level logs only critical errors.  WARN
logs warnings that may reflect operation.  INFO logs various informational
messages that are useful for tracking state and operations.  DEBUG enables
verbose logging for debugging purposes.  Subsequent levels also log all messages
from earlier levels; thus setting the log level to INFO also logs error and
warning messages.
.TP
.B domains=\fI<domain1>,<domain2>, ...\fP
The following log domains are available: [HW, RFKILL, ETHER, WIFI, BT, MB, DHCP4,
DHCP6, PPP, WIFI_SCAN, IP4, IP6, AUTOIP4, DNS, VPN, SHARING, SUPPLICANT, AGENTS,
SETTINGS, SUSPEND, CORE, DEVICE, OLPC, WIMAX, INFINIBAND, FIREWALL, ADSL, BOND,
VLAN, BRIDGE].
.br
In addition to them, these special domains can be used: [NONE, ALL, DEFAULT, DHCP, IP].
.PP
.RS
NONE = when given by itself, logging is disabled
.br
ALL = all log domains will be switched on
.br
DEFAULT = default log domains
.br
DHCP = a shortcut for "DHCP4, DHCP6"
.br
IP = a shortcut for "IP4, IP6"
.br
.PP
HW = Hardware related operations
.br
RFKILL = RFKill subsystem operations
.br
ETHER = Ethernet device operations
.br
WIFI = Wi-Fi device operations
.br
BT = Bluetooth
.br
MB = Mobile Broadband
.br
DHCP4 = DHCP for IPv4
.br
DHCP6 = DHCP for IPv6
.br
PPP = Point-to-point protocol operations
.br
WIFI_SCAN = Wi-Fi scanning operations
.br
IP4 = Domain for IPv4 logging
.br
IP6 = Domain for IPv6 logging
.br
AUTOIP4 = AutoIP (avahi) operations
.br
DNS = Domain Name System related operations
.br
VPN = Virtual Private Network connections and operaions
.br
SHARING = Connection sharing
.br
SUPPLICANT = WPA supplicant related operations
.br
AGENTS = Secret agents operations and communication
.br
SETTINGS = Settings/config service operations
.br
SUSPEND = Suspend/resume
.br
CORE = Core daemon operations
.br
DEVICE = Activation and general interface operations
.br
OLPC = OLPC Mesh device operations
.br
WIMAX = Wimax device operations
.br
INFINIBAND = InfiniBand device operations
.br
FIREWALL = FirewallD related operations
.br
ADSL = ADSL device operations
.br
BOND = Bonding device operations
.br
VLAN = VLAN device operations
.br
BRIDGE = Bridging device operations
.br
.SS [connectivity]
This section controls NetworkManager's optional connectivity checking
functionality.  This allows NetworkManager to detect whether or not the system
can actually access the internet or whether it is behind a captive portal.
.TP
.B uri=\fI<uri>\fP
The URI of a web page to periodically request when connectivity is being checked.
This page should return the header "X-NetworkManager-Status" with a value of
"online".  Alternatively, it's body content should be set to "NetworkManager
is online".  The body content check can be controlled by the \fIresponse\fP
option.  If this option is blank or missing, connectivity checking is disabled.
.TP
.B interval=\fI<seconds>\fP
Controls how often connectivity is checked when a network connection exists. If
set to 0 connectivity checking is disabled.  If missing, the default is 300
seconds.
.TP
.B response=\fI<response>\fP
If set controls what body content NetworkManager checks for when requesting the
URI for connectivity checking.  If missing, defaults to "NetworkManager is online"
.SH "SEE ALSO"
.BR http://live.gnome.org/NetworkManager/SystemSettings
.sp
.BR NetworkManager (8),
.BR nmcli (1),
.BR nm\-tool (1),
.BR nm\-online (1),
.BR nm\-settings (5).
